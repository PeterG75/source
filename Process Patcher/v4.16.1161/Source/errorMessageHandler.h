//////////////////////////////////////////////////////////////////////////////////////
// Display a message if an error occurred while executing. Terminates if required   //
//////////////////////////////////////////////////////////////////////////////////////

#define MAXIMUM_ERROR_MESSAGES								100

#define ERROR_PARSING_SCRIPT_NOTFOUND						1
#define ERROR_PARSING_GENERAL								2
#define ERROR_PARSING_SCRIPT_INVALID						3
#define ERROR_PARSING_SCRIPT_UNSUPPORTED					4
#define ERROR_PARSING_OS_UNSUPPORTED						5
#define ERROR_PARSING_BLOCKEXECUTION						6

#define ERROR_SCRIPT_ENCRYPTION_VALIDKEY					10
#define ERROR_SCRIPT_ENCRYPTION_VALIDLENGTH					11
#define ERROR_SCRIPT_ENCRYPTION_GENERAL						12
#define ERROR_SCRIPT_ENCRYPTION_BACKUP						13
#define ERROR_SCRIPT_ENCRYPTION_ALREADYENCRYPTED			14

#define ERROR_SCRIPT_DECRYPTION_VALIDKEY					15
#define ERROR_SCRIPT_DECRYPTION_VALIDLENGTH					16
#define ERROR_SCRIPT_DECRYPTION_GENERAL						17
#define ERROR_SCRIPT_DECRYPTION_NOTENCRYPTED				18

#define ERROR_CRITICALEXCEPTION_ENGINE						20
#define ERROR_CRITICALEXCEPTION_PROCESS						21
#define ERROR_CRITICALEXCEPTION_MODULE						22
#define ERROR_CRITICALEXCEPTION_PLUGIN						23
#define ERROR_CRITICALEXCEPTION_REGISTRY					24

#define ERROR_PATCHING_ENGINE_PROCESSTERMINATED				30
#define ERROR_PATCHING_ENGINE_TERMINATED					31
#define ERROR_PATCHING_ENGINE_WAITINGEVENTS					32

#define ERROR_PATCHING_TARGETPROCESS_GENERAL				40
#define ERROR_PATCHING_TARGETPROCESS_FILESIZE				41
#define ERROR_PATCHING_TARGETPROCESS_MEMORYACCESS			42
#define ERROR_PATCHING_TARGETPROCESS_RECURSIVE				43

#define ERROR_PATCHING_CHILDPROCESS_DETERMINEPROCESSES		45
#define ERROR_PATCHING_CHILDPROCESS_FINDPROCESS				46
#define ERROR_PATCHING_CHILDPROCESS_MEMORYACCESS			47
#define ERROR_PATCHING_CHILDPROCESS_FILESIZE				48

#define ERROR_PATCHING_MODULE_GENERAL						50
#define ERROR_PATCHING_MODULE_NOTFOUND						51
#define ERROR_PATCHING_MODULE_DETERMINEMODULES				52

#define ERROR_PATCHING_PLUGIN_GENERAL						60
#define ERROR_PATCHING_PLUGIN_EXECUTION						61
#define ERROR_PATCHING_PLUGIN_APIVERSION					62
#define ERROR_PATCHING_PLUGIN_APIVERSION_0100				63
#define ERROR_PATCHING_PLUGIN_EXPORTS_GETVERSION			64
#define ERROR_PATCHING_PLUGIN_EXPORTS_EXECUTEPLUGIN			65
#define ERROR_PATCHING_PLUGIN_EXPORTS_GETERROR				66

#define ERROR_PATCHING_REGISTRY_GENERAL						70
#define ERROR_PATCHING_REGISTRY_CREATINGKEY					71
#define ERROR_PATCHING_REGISTRY_SETTINGVALUE				72

#define ERROR_WIN32API_MODULE_TOOLHELP32					80
#define ERROR_WIN32API_MODULE_NTDLL							81

#define ERROR_SHELLEXTENSION_REGISTER						90
#define ERROR_SHELLEXTENSION_UNREGISTER						91

#define ERROR_GENERAL_BLOWFISHENCRYPTION					95
#define ERROR_CUSTOM_MESSAGE								99

bool isProcessPatcherShutingDown(void);
void shutdownProcessPatcher(bool showExitMessage);

void initialiseErrorMessages(void);

void displayErrorMessage(int errorNumber, char* additionalErrorMessage, bool exitProgram);
void displayErrorMessage(int errorNumber, bool exitProgram);
void displayCustomErrorMessage(char* errorMessage, bool exitProgram);

int handleCriticalException(EXCEPTION_POINTERS* exceptionInformation, int executionThreadType);